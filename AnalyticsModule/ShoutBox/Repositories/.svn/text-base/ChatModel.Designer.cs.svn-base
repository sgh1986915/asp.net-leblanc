//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsChatRoom), "AnalyticsTalker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsTalker), true)]
[assembly: EdmRelationshipAttribute("robusthavenModel", "FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsTalker), "AnalyticsMessagePool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsMessagePool), true)]
[assembly: EdmRelationshipAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsSession), "AnalyticsTalker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RobustHaven.Areas.ShoutBox.Repositories.AnalyticsTalker), true)]

#endregion

namespace RobustHaven.Areas.ShoutBox.Repositories
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class robusthavenEntity : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new robusthavenEntity object using the connection string found in the 'robusthavenEntity' section of the application configuration file.
        /// </summary>
        public robusthavenEntity() : base("name=robusthavenEntity", "robusthavenEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new robusthavenEntity object.
        /// </summary>
        public robusthavenEntity(string connectionString) : base(connectionString, "robusthavenEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new robusthavenEntity object.
        /// </summary>
        public robusthavenEntity(EntityConnection connection) : base(connection, "robusthavenEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnalyticsChatRoom> AnalyticsChatRooms
        {
            get
            {
                if ((_AnalyticsChatRooms == null))
                {
                    _AnalyticsChatRooms = base.CreateObjectSet<AnalyticsChatRoom>("AnalyticsChatRooms");
                }
                return _AnalyticsChatRooms;
            }
        }
        private ObjectSet<AnalyticsChatRoom> _AnalyticsChatRooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnalyticsMessagePool> AnalyticsMessagePools
        {
            get
            {
                if ((_AnalyticsMessagePools == null))
                {
                    _AnalyticsMessagePools = base.CreateObjectSet<AnalyticsMessagePool>("AnalyticsMessagePools");
                }
                return _AnalyticsMessagePools;
            }
        }
        private ObjectSet<AnalyticsMessagePool> _AnalyticsMessagePools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnalyticsSession> AnalyticsSessions
        {
            get
            {
                if ((_AnalyticsSessions == null))
                {
                    _AnalyticsSessions = base.CreateObjectSet<AnalyticsSession>("AnalyticsSessions");
                }
                return _AnalyticsSessions;
            }
        }
        private ObjectSet<AnalyticsSession> _AnalyticsSessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AnalyticsTalker> AnalyticsTalkers
        {
            get
            {
                if ((_AnalyticsTalkers == null))
                {
                    _AnalyticsTalkers = base.CreateObjectSet<AnalyticsTalker>("AnalyticsTalkers");
                }
                return _AnalyticsTalkers;
            }
        }
        private ObjectSet<AnalyticsTalker> _AnalyticsTalkers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnalyticsChatRooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalyticsChatRooms(AnalyticsChatRoom analyticsChatRoom)
        {
            base.AddObject("AnalyticsChatRooms", analyticsChatRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnalyticsMessagePools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalyticsMessagePools(AnalyticsMessagePool analyticsMessagePool)
        {
            base.AddObject("AnalyticsMessagePools", analyticsMessagePool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnalyticsSessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalyticsSessions(AnalyticsSession analyticsSession)
        {
            base.AddObject("AnalyticsSessions", analyticsSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AnalyticsTalkers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnalyticsTalkers(AnalyticsTalker analyticsTalker)
        {
            base.AddObject("AnalyticsTalkers", analyticsTalker);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="robusthavenModel", Name="AnalyticsChatRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalyticsChatRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnalyticsChatRoom object.
        /// </summary>
        /// <param name="chatRoomID">Initial value of the ChatRoomID property.</param>
        /// <param name="chatRoomName">Initial value of the ChatRoomName property.</param>
        public static AnalyticsChatRoom CreateAnalyticsChatRoom(global::System.Guid chatRoomID, global::System.String chatRoomName)
        {
            AnalyticsChatRoom analyticsChatRoom = new AnalyticsChatRoom();
            analyticsChatRoom.ChatRoomID = chatRoomID;
            analyticsChatRoom.ChatRoomName = chatRoomName;
            return analyticsChatRoom;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatRoomID
        {
            get
            {
                return _ChatRoomID;
            }
            set
            {
                if (_ChatRoomID != value)
                {
                    OnChatRoomIDChanging(value);
                    ReportPropertyChanging("ChatRoomID");
                    _ChatRoomID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChatRoomID");
                    OnChatRoomIDChanged();
                }
            }
        }
        private global::System.Guid _ChatRoomID;
        partial void OnChatRoomIDChanging(global::System.Guid value);
        partial void OnChatRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChatRoomName
        {
            get
            {
                return _ChatRoomName;
            }
            set
            {
                OnChatRoomNameChanging(value);
                ReportPropertyChanging("ChatRoomName");
                _ChatRoomName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChatRoomName");
                OnChatRoomNameChanged();
            }
        }
        private global::System.String _ChatRoomName;
        partial void OnChatRoomNameChanging(global::System.String value);
        partial void OnChatRoomNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsTalker")]
        public EntityCollection<AnalyticsTalker> AnalyticsTalkers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyticsTalker>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsTalker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyticsTalker>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsTalker", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="robusthavenModel", Name="AnalyticsMessagePool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalyticsMessagePool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnalyticsMessagePool object.
        /// </summary>
        /// <param name="messageID">Initial value of the messageID property.</param>
        /// <param name="message">Initial value of the message property.</param>
        /// <param name="sendTime">Initial value of the SendTime property.</param>
        /// <param name="talkerID">Initial value of the talkerID property.</param>
        public static AnalyticsMessagePool CreateAnalyticsMessagePool(global::System.Int32 messageID, global::System.String message, global::System.DateTime sendTime, global::System.Int32 talkerID)
        {
            AnalyticsMessagePool analyticsMessagePool = new AnalyticsMessagePool();
            analyticsMessagePool.messageID = messageID;
            analyticsMessagePool.message = message;
            analyticsMessagePool.SendTime = sendTime;
            analyticsMessagePool.talkerID = talkerID;
            return analyticsMessagePool;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 messageID
        {
            get
            {
                return _messageID;
            }
            set
            {
                if (_messageID != value)
                {
                    OnmessageIDChanging(value);
                    ReportPropertyChanging("messageID");
                    _messageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("messageID");
                    OnmessageIDChanged();
                }
            }
        }
        private global::System.Int32 _messageID;
        partial void OnmessageIDChanging(global::System.Int32 value);
        partial void OnmessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String message
        {
            get
            {
                return _message;
            }
            set
            {
                OnmessageChanging(value);
                ReportPropertyChanging("message");
                _message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("message");
                OnmessageChanged();
            }
        }
        private global::System.String _message;
        partial void OnmessageChanging(global::System.String value);
        partial void OnmessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SendTime
        {
            get
            {
                return _SendTime;
            }
            set
            {
                OnSendTimeChanging(value);
                ReportPropertyChanging("SendTime");
                _SendTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendTime");
                OnSendTimeChanged();
            }
        }
        private global::System.DateTime _SendTime;
        partial void OnSendTimeChanging(global::System.DateTime value);
        partial void OnSendTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 talkerID
        {
            get
            {
                return _talkerID;
            }
            set
            {
                OntalkerIDChanging(value);
                ReportPropertyChanging("talkerID");
                _talkerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("talkerID");
                OntalkerIDChanged();
            }
        }
        private global::System.Int32 _talkerID;
        partial void OntalkerIDChanging(global::System.Int32 value);
        partial void OntalkerIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker")]
        public AnalyticsTalker AnalyticsTalker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsTalker>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsTalker>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AnalyticsTalker> AnalyticsTalkerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsTalker>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AnalyticsTalker>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsTalker", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="robusthavenModel", Name="AnalyticsSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalyticsSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnalyticsSession object.
        /// </summary>
        /// <param name="uID">Initial value of the UID property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="iP">Initial value of the IP property.</param>
        /// <param name="userAlias">Initial value of the UserAlias property.</param>
        public static AnalyticsSession CreateAnalyticsSession(global::System.Int32 uID, global::System.String sessionID, global::System.String iP, global::System.String userAlias)
        {
            AnalyticsSession analyticsSession = new AnalyticsSession();
            analyticsSession.UID = uID;
            analyticsSession.SessionID = sessionID;
            analyticsSession.IP = iP;
            analyticsSession.UserAlias = userAlias;
            return analyticsSession;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Int32 _UID;
        partial void OnUIDChanging(global::System.Int32 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.String _SessionID;
        partial void OnSessionIDChanging(global::System.String value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                OnIPChanging(value);
                ReportPropertyChanging("IP");
                _IP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IP");
                OnIPChanged();
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAlias
        {
            get
            {
                return _UserAlias;
            }
            set
            {
                OnUserAliasChanging(value);
                ReportPropertyChanging("UserAlias");
                _UserAlias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserAlias");
                OnUserAliasChanged();
            }
        }
        private global::System.String _UserAlias;
        partial void OnUserAliasChanging(global::System.String value);
        partial void OnUserAliasChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsSession", "AnalyticsTalker")]
        public EntityCollection<AnalyticsTalker> AnalyticsTalkers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyticsTalker>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsTalker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyticsTalker>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsTalker", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="robusthavenModel", Name="AnalyticsTalker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalyticsTalker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AnalyticsTalker object.
        /// </summary>
        /// <param name="talkerID">Initial value of the TalkerID property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="chatRoomID">Initial value of the ChatRoomID property.</param>
        /// <param name="checkInTime">Initial value of the CheckInTime property.</param>
        public static AnalyticsTalker CreateAnalyticsTalker(global::System.Int32 talkerID, global::System.Int32 sessionID, global::System.Guid chatRoomID, global::System.DateTime checkInTime)
        {
            AnalyticsTalker analyticsTalker = new AnalyticsTalker();
            analyticsTalker.TalkerID = talkerID;
            analyticsTalker.SessionID = sessionID;
            analyticsTalker.ChatRoomID = chatRoomID;
            analyticsTalker.CheckInTime = checkInTime;
            return analyticsTalker;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TalkerID
        {
            get
            {
                return _TalkerID;
            }
            set
            {
                if (_TalkerID != value)
                {
                    OnTalkerIDChanging(value);
                    ReportPropertyChanging("TalkerID");
                    _TalkerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TalkerID");
                    OnTalkerIDChanged();
                }
            }
        }
        private global::System.Int32 _TalkerID;
        partial void OnTalkerIDChanging(global::System.Int32 value);
        partial void OnTalkerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.Int32 _SessionID;
        partial void OnSessionIDChanging(global::System.Int32 value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChatRoomID
        {
            get
            {
                return _ChatRoomID;
            }
            set
            {
                OnChatRoomIDChanging(value);
                ReportPropertyChanging("ChatRoomID");
                _ChatRoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChatRoomID");
                OnChatRoomIDChanged();
            }
        }
        private global::System.Guid _ChatRoomID;
        partial void OnChatRoomIDChanging(global::System.Guid value);
        partial void OnChatRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CheckInTime
        {
            get
            {
                return _CheckInTime;
            }
            set
            {
                OnCheckInTimeChanging(value);
                ReportPropertyChanging("CheckInTime");
                _CheckInTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckInTime");
                OnCheckInTimeChanged();
            }
        }
        private global::System.DateTime _CheckInTime;
        partial void OnCheckInTimeChanging(global::System.DateTime value);
        partial void OnCheckInTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CheckOutTime
        {
            get
            {
                return _CheckOutTime;
            }
            set
            {
                OnCheckOutTimeChanging(value);
                ReportPropertyChanging("CheckOutTime");
                _CheckOutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckOutTime");
                OnCheckOutTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CheckOutTime;
        partial void OnCheckOutTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCheckOutTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom")]
        public AnalyticsChatRoom AnalyticsChatRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsChatRoom>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsChatRoom>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AnalyticsChatRoom> AnalyticsChatRoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsChatRoom>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AnalyticsChatRoom>("robusthavenModel.FK_AnalyticsTalker_AnalyticsChatRoom", "AnalyticsChatRoom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsMessagePool")]
        public EntityCollection<AnalyticsMessagePool> AnalyticsMessagePools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyticsMessagePool>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsMessagePool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyticsMessagePool>("robusthavenModel.FK_AnalyticsMessagePool_AnalyticsTalker", "AnalyticsMessagePool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("robusthavenModel", "FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession")]
        public AnalyticsSession AnalyticsSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsSession>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsSession>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AnalyticsSession> AnalyticsSessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnalyticsSession>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AnalyticsSession>("robusthavenModel.FK_AnalyticsTalker_AnalyticsSession", "AnalyticsSession", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
